{"version":3,"sources":["atom/style/useStyle.js","atom/modal/CannotUseModal.jsx","atom/modal/index.js","util/TerreractProvider.js","util/TesseractLogger.js","util/index.js","util/processFrame.js","util/useTesseract.js","atom/component/MouseTracker.jsx","atom/component/DevStreamer.jsx","atom/component/MediaSelector.jsx","atom/component/TopBar.jsx","atom/index.js","atom/component/index.js","page/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","theme","root","flexGrow","paddingTop","paddingBottom","minHeight","position","devStreamer","width","backgroundColor","red","devStreamerMedia","height","objectFit","cannotUseModal","display","alignItems","justifyContent","cannotUseModalPaper","palette","background","paper","border","boxShadow","shadows","padding","spacing","menuButton","marginRight","title","fab","bottom","right","margin","extendedIcon","table","minWidth","CannotUseModal","open","handleOpen","classes","Modal","className","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","defaultProps","modal","TesseractContext","React","createContext","Provider","Consumer","TesseractProvider","workerCreateOption","children","onLoad","useSchedule","workerNumber","loadLanguage","initialize","workerParameter","useState","loaded","setLoaded","handleOnLoaded","useCallback","workers","scheduler","useMemo","createScheduler","Promise","all","arr","Array","fill","map","a","worker","createWorker","console","log","Date","load","setParameters","then","forEach","addWorker","providerValue","value","state","proxy","rows","actions","addLog","tesseractLog","push","jobId","data","text","confidence","blocks","paragraphs","lines","createRow","clearLogs","length","util","clearCanvas","canvas","getContext","clearRect","beginPath","removeAttribute","processFrame","useCvProcess","createProcess","useOpenCv","cv","useContext","preProcess","process","clearProcess","createProcessGrayScaleAndShow","dst","window","PROCESS_DST","Mat","src","cvtColor","COLOR_RGBA2GRAY","imshow","getQueueLen","debug","addJob","delete","MouseTracker","props","ref","useRef","x","y","point","setPoint","snap","useSnapshot","handleMouseOver","e","ctrlKey","target","HTMLVideoElement","layerX","layerY","useEffect","el","current","addEventListener","removeEventListener","handleMouseClick","x1","y1","x2","y2","point1","point2","Math","abs","getTitle","Tooltip","followCursor","DevStreamer","stream","setStream","processGrayScaleAndShow","videoRef","prototype","canvasRef","HTMLCanvasElement","srcRef","captureRef","clearEnv","timerRef","cancelAnimationFrame","frameRateRef","read","requestAnimationFrame","error","start","srcObject","videoHeight","videoWidth","frameRate","getVideoTracks","getSettings","CV_8UC4","VideoCapture","MediaStream","active","videoEl","clone","track","handleTrackEnded","play","stop","page","setPage","rowsPerPage","setRowsPerPage","columns","label","Grid","container","item","xs","Box","Paper","TableContainer","Table","size","TableHead","TableRow","column","TableCell","TableBody","slice","row","hover","role","tabIndex","code","TablePagination","rowsPerPageOptions","component","count","onPageChange","event","newPage","onRowsPerPageChange","MediaSelector","useTheme","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","cannotUseModalOpen","setCannotUseModalOpen","handleCannotUseModalOpen","navigator","mediaDevices","getDisplayMedia","getTracks","handleCastClick","audio","mediaStream","handleCancelClick","fabs","color","icon","onClick","index","Zoom","style","transitionDelay","unmountOnExit","Fab","variant","TopBar","AppBar","Toolbar","IconButton","edge","Typography","atom","Main","Container","maxWidth","createTheme","App","tesseractWorkerCreateOption","logger","m","tesseractWorkerParameter","tessedit_pageseg_mode","PSM","AUTO","user_defined_dpi","tessedit_create_box","tessedit_create_unlv","tessedit_create_osd","openCvPath","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAmDeA,EAhDEC,aAAW,SAACC,GAAD,MAAY,CACtCC,KAAM,CACJC,SAAU,EACVC,WAAY,GACZC,cAAe,GACfC,UAAW,QACXC,SAAU,YAEZC,YAAa,CACXC,MAAO,OACPC,gBAAiBC,IAAI,MAEvBC,iBAAkB,CAChBH,MAAO,OACPI,OAAQ,OACRC,UAAW,WAEbC,eAAgB,CACdC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,oBAAqB,CACnBT,gBAAiBT,EAAMmB,QAAQC,WAAWC,MAC1CC,OAAQ,iBACRC,UAAWvB,EAAMwB,QAAQ,GACzBC,QAASzB,EAAM0B,QAAQ,EAAG,EAAG,IAE/BC,WAAY,CACVC,YAAa5B,EAAM0B,QAAQ,IAE7BG,MAAO,CACL3B,SAAU,GAEZ4B,IAAK,CACHxB,SAAU,kBACVyB,OAAQ/B,EAAM0B,QAAQ,GACtBM,MAAOhC,EAAM0B,QAAQ,GACrBO,OAAQjC,EAAM0B,QAAQ,IAExBQ,aAAc,CACZN,YAAa5B,EAAM0B,QAAQ,IAE7BS,MAAO,CACLC,SAAU,S,kCC1CRC,EAAiB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACxBC,EAAU1C,IAEhB,OACE,cAAC2C,EAAA,EAAD,CACE,kBAAgB,mBAChB,mBAAiB,sCACjBC,UAAWF,EAAQ1B,eACnBwB,KAAMA,EACNK,QAASJ,EACTK,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACbC,QAAS,KATb,SAWE,cAACC,EAAA,EAAD,CAAMC,GAAIZ,EAAV,SACE,sBAAKI,UAAWF,EAAQnB,MAAxB,UACE,oBAAI8B,GAAG,yBAAP,uCACA,mBAAGA,GAAG,+BAAN,2FAOVd,EAAee,aAAe,CAC5Bd,MAAM,GAQOD,QCjCAgB,EAJD,CACZhB,kB,yGCAIiB,EAAmBC,IAAMC,gBAEMC,GAAaH,EAA1CI,SAA0CJ,EAAbG,UAIxBE,EAAoB,SAAC,GAS3B,IARLC,EAQI,EARJA,mBACAC,EAOI,EAPJA,SACAC,EAMI,EANJA,OAMI,IALJC,mBAKI,aAJJC,oBAII,MAJW,EAIX,MAHJC,oBAGI,MAHW,MAGX,MAFJC,kBAEI,MAFS,MAET,MADJC,uBACI,MADc,GACd,EACJ,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAiBC,uBACrB,YAA6B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACNZ,GACFA,EAAO,CAAEW,UAASC,cAEpBJ,GAAU,KAEZ,CAACR,IAGGY,EAAYC,mBAAQ,kBAAMZ,GAAea,8BAAmB,CAACb,IAE7DU,EAAUE,mBACd,kBACEE,QAAQC,KACJC,EAAoB,IAAIC,MAAMhB,GAAtBe,EAAIE,QAAiCC,IAA/C,sBAAmD,4BAAAC,EAAA,6DAC3CC,EAASC,uBAAazB,GAC5B0B,QAAQC,IAAI,IAAIC,KAAQ,eAFyB,SAG3CJ,EAAOK,OAHoC,uBAI3CL,EAAOnB,aAAaA,GAJuB,uBAK3CmB,EAAOlB,WAAWA,GALyB,wBAM3CkB,EAAOM,cAAcvB,GANsB,iCAQ1CiB,GAR0C,8CAUnDO,MAAK,SAAClB,GACFV,GACFU,EAAQmB,SAAQ,SAACR,GACfV,EAAUmB,UAAUT,MAGxBb,EAAe,CAAEE,UAASC,iBAhBzB,IAACK,IAkBN,CAACnB,EAAoBI,EAAcC,EAAcC,EAAYC,EAAiBJ,EAAaW,EAAWH,IAGlGuB,EAAgBnB,mBACpB,iBAAO,CACLD,YACAD,UACAJ,YAEF,CAACA,EAAQK,EAAWD,IAGtB,OAAO,cAAChB,EAAD,CAAUsC,MAAOD,EAAjB,SAAiCjC,K,gBChE7BmC,EAAQC,gBAAM,CACzBC,KAAM,KAWKC,EAAU,CACrBC,OAAQ,SAACC,GACPL,EAAME,KAAKI,KAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,IAAUC,KAAV,MAAuE,CACvFD,QACAE,KAFgB,EAAkBA,KAGlCC,WAHgB,EAAwBA,WAIxCC,OAJgB,EAAoCA,OAKpDC,WALgB,EAA4CA,WAM5DC,MANgB,EAAwDA,OAUtDC,CAAUT,KAE5BU,UAAW,WACTf,EAAME,KAAKc,OAAS,ICLTC,EALF,CACXC,YARkB,SAACC,GACnBA,EAAOC,WAAW,MAAMC,UAAU,EAAG,EAAGF,EAAO3G,MAAO2G,EAAOvG,QAC7DuG,EAAOC,WAAW,MAAME,YACxBH,EAAOI,gBAAgB,SACvBJ,EAAOI,gBAAgB,WAKvBC,aCoDmB,CACnBC,aAvDmB,SAACC,GACpB,MAAuBC,cAAfC,EAAR,EAAQA,GAAIvD,EAAZ,EAAYA,OACJK,ECRwBnB,IAAMsE,WAAWvE,GDQzCoB,UACR,EAA4CC,mBAAQ,kBAAM+C,EAAcE,EAAIvD,EAAQK,KAAY,CAACkD,EAAIvD,EAAQqD,EAAehD,IAA5H,mBAEA,MAAO,CAAEoD,WAFT,KAEqBC,QAFrB,KAE8BC,aAF9B,KAE4CJ,KAAIvD,WAmDhD4D,8BAzCoC,SAACL,EAAIvD,EAAQK,GAE/C,IAAIwD,EADN,OAAI7D,GAIF8D,OAAOC,YAAcF,EAEd,CACL,WACEA,EAAM,IAAIN,EAAGS,IACblC,EAAQY,aAGV,YAAsB,IAAnBuB,EAAkB,EAAlBA,IAAKnB,EAAa,EAAbA,OAGNS,EAAGW,SAASD,EAAKJ,EAAKN,EAAGY,iBACzBZ,EAAGa,OAAOtB,EAAQe,GAEdxD,EAAUgE,cAAgB,IAC5BpD,QAAQqD,MAAM,IAAInD,KAAQ,WAC1B,sBAAC,sBAAAL,EAAA,kEACCgB,EADD,SACsBzB,EAAUkE,OAAO,YAAazB,GADpD,wBACSf,OADT,0DAAD,KAMJ,WACE8B,EAAIW,SAEJX,EAAM,QAKH,CAAC,aAAU,iB,SE6CPY,EAnGM,SAACC,GACpB,IAAQlF,EAAakF,EAAblF,SACFmF,EAAMC,mBACZ,EAA0B7E,mBAAS,CAAE8E,EAAG,KAAMC,EAAG,OAAjD,mBAAOC,EAAP,KAAcC,EAAd,KAEMrD,EAAQrB,mBACZ,kBACEsB,gBAAM,CACJiD,EAAG,KACHC,EAAG,SAEP,IAEIG,EAAOC,sBAAYvD,GAEnBwD,EAAkBhF,uBAKtB,SAACiF,GACMA,EAAEC,UACDD,EAAEE,kBAAkBC,kBAAoBH,EAAEI,QAAU,GAAKJ,EAAEK,QAAU,GACvE9D,EAAMkD,EAAIO,EAAEI,OACZ7D,EAAMmD,EAAIM,EAAEK,SAEZ9D,EAAMkD,EAAI,KACVlD,EAAMmD,EAAI,SAIhB,CAACnD,IAGH+D,qBAAU,WACR,IAAMC,EAAKhB,EAAIiB,QAEf,OADAD,EAAGE,iBAAiB,YAAaV,GAC1B,WACLQ,EAAGG,oBAAoB,YAAaX,MAErC,CAACA,IAEJ,IAAMY,EAAmB5F,uBAKvB,SAACiF,GACC,IAAMP,EAAIO,EAAEC,QAAUJ,EAAKJ,EAAIO,EAAEI,OAC3BV,EAAIM,EAAEC,QAAUJ,EAAKH,EAAIM,EAAEK,OAEjCxE,QAAQC,IAAI,CAAE2D,IAAGC,MACbM,EAAEE,kBAAkBC,kBAAoBV,GAAK,GAAKC,GAAK,IACzC,OAAZC,EAAMF,GAA0B,OAAZE,EAAMD,GAC5B7D,QAAQC,IAAI,CACV8E,GAAIjB,EAAMF,EACVoB,GAAIlB,EAAMD,EACVoB,GAAIrB,EACJsB,GAAIrB,EACJsB,OAAQrB,EACRsB,OAAQ,CAAExB,IAAGC,KACb3I,MAAOmK,KAAKC,IAAIxB,EAAMF,EAAIA,GAC1BtI,OAAQ+J,KAAKC,IAAIxB,EAAMD,EAAIA,KAE7BE,EAAS,CAAEH,EAAG,KAAMC,EAAG,QAEvBE,EAAS,CAAEH,IAAGC,SAIpB,CAACG,EAAMF,IAETW,qBAAU,WACR,IAAMC,EAAKhB,EAAIiB,QAEf,OADAD,EAAGE,iBAAiB,QAASE,GACtB,WACLJ,EAAGG,oBAAoB,QAASC,MAEjC,CAACA,IAEJ,IAAMS,EAAWrG,uBAAY,WAC3B,OAAe,OAAX8E,EAAKJ,GAAyB,OAAXI,EAAKH,EACpB,KAAN,OAAYG,EAAKJ,EAAjB,eAAyBI,EAAKH,GAEvB,KAER,CAACG,IAEJ,OACE,cAACwB,EAAA,EAAD,CAASC,cAAc,EAAMlJ,MAAOgJ,IAAY7B,IAAKA,EAArD,SACGnF,K,SCrFLqD,EAEED,EAFFC,YADF,EAGID,EADFO,aAAgBC,EAFlB,EAEkBA,aAAcQ,EAFhC,EAEgCA,8BAiLjB+C,EA9KK,SAACjC,GACnB,IAAQkC,EAAsBlC,EAAtBkC,OAAQC,EAAcnC,EAAdmC,UACV1I,EAAU1C,IACVoG,ELOWqD,sBAAYvD,GAEbE,KKPhB,EAA2EuB,EAAaQ,GAAhFH,EAAR,EAAQA,WAAqBqD,EAA7B,EAAoBpD,QAAkCC,EAAtD,EAAsDA,aAAcJ,EAApE,EAAoEA,GAE9DwD,EAAWnC,iBAAOW,iBAAiByB,WACnCC,EAAYrC,iBAAOsC,kBAAkBF,WACrCG,EAASvC,iBAAO,MAChBwC,EAAaxC,mBAEbyC,EAAWlH,uBAAY,WACvBgH,EAAOvB,UACTuB,EAAOvB,QAAQpB,SACf2C,EAAOvB,QAAU,MAEf0B,EAAS1B,UACX2B,qBAAqBD,EAAS1B,SAC9B0B,EAAS1B,QAAU,MAErB/C,EAAYoE,EAAUrB,SACtBjC,MACC,CAACA,IAEE2D,EAAW1C,mBACX4C,EAAe5C,iBAAO,IAEtBzB,EAAehD,uBAAY,WAC/B,IACEiH,EAAWxB,QAAQ6B,KAAKN,EAAOvB,SAE/BkB,EAAwB,CACtB7C,IAAKkD,EAAOvB,QACZ9C,OAAQmE,EAAUrB,UAGpB0B,EAAS1B,QAAU8B,sBAAsBvE,GACzC,MAAOwE,GACP1G,QAAQ0G,MAAMA,MAEf,CAACb,IAEEc,EAAQzH,uBAAY,WACxBc,QAAQqD,MAAM,IAAInD,KAAQ,SAE1B,MAAsE4F,EAASnB,QAA5DgB,EAAnB,EAAQiB,UAAgCtL,EAAxC,EAA2BuL,YAAiC3L,EAA5D,EAAgD4L,WACxCC,EAAcpB,EAAOqB,iBAAiB,GAAGC,cAAzCF,UACRR,EAAa5B,QAAUoC,EACvBb,EAAOvB,QAAU,IAAIrC,EAAGS,IAAIzH,EAAQJ,EAAOoH,EAAG4E,SAC9Cf,EAAWxB,QAAU,IAAIrC,EAAG6E,aAAarB,EAASnB,SAElDnC,IAEA6D,EAAS1B,QAAU8B,sBAAsBvE,KACxC,CAACM,EAAYN,EAAcI,IAE9BmC,qBAAU,WACR,GAAIkB,GAAUA,aAAkByB,aAAezB,EAAO0B,OAAQ,CAC5D,IAAMC,EAAUxB,EAASnB,QACzB2C,EAAQV,UAAYjB,EAAO4B,QAE3B,IAAMC,EAAQ7B,EAAOqB,iBAAiB,GAEhCS,EAAmB,WACvBzH,QAAQqD,MAAM,IAAInD,KAAQ,uBAC1B0F,EAAU,OAaZ,OAXA4B,EAAM5C,iBAAiB,QAAS6C,GAEhC,sBAAC,gCAAA5H,EAAA,sEACOyH,EAAQI,OADf,SAEoD5B,EAASnB,QAAvCrJ,EAFtB,EAESuL,YAAiC3L,EAF1C,EAE8B4L,WAC7BhB,EAASnB,QAAQzJ,MAAQA,EACzB4K,EAASnB,QAAQrJ,OAASA,EAC1B0E,QAAQC,IAAI,KAAM3E,EAAQJ,EAAO4K,EAASnB,QAAQkC,YAAaf,EAASnB,QAAQmC,YAChFH,IAND,0CAAD,GASO,WACL3G,QAAQqD,MAAM,IAAInD,KAAQ,iBAC1BsH,EAAM3C,oBAAoB,QAAS4C,GACnCH,EAAQV,UAAUI,iBAAiB1G,SAAQ,SAACkH,GAAD,OAAWA,EAAMG,UAC5DL,EAAQV,UAAY,KACpBU,EAAQrF,gBAAgB,SACxBqF,EAAQrF,gBAAgB,UACxBmE,QAGH,CAACT,EAAQC,EAAWe,EAAOP,IAE9B,MAAwBtH,mBAAS,GAAjC,mBAAO8I,EAAP,KAAaC,EAAb,KACA,EAAsC/I,mBAAS,IAA/C,mBAAOgJ,EAAP,KAAoBC,EAApB,KACMC,EAAU3I,mBACd,iBAAM,CACJ,CAAExB,GAAI,QAASoK,MAAO,UACtB,CAAEpK,GAAI,OAAQoK,MAAO,WAEvB,IAWF,OACE,qCAGI,cAAC,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACxM,eAAgB,SAAUyM,MAAI,EAACC,GAAI,EAAnD,SACE,cAACC,EAAA,EAAD,CAAKlL,UAAWF,EAAQjC,YAAasM,OAAK,EAA1C,SACE,uBAAOnK,UAAWF,EAAQ7B,iBAAkBqI,IAAKoC,UAKzD,cAACoC,EAAA,EAAD,CAAMC,WAAS,EAACxM,eAAgB,SAAUyM,MAAI,EAACC,GAAI,EAAnD,SACE,cAACC,EAAA,EAAD,CAAKlL,UAAWF,EAAQjC,YAAasM,OAAK,EAA1C,SACE,wBAAQnK,UAAWF,EAAQ7B,iBAAkBqI,IAAKsC,QAGtD,cAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAOrL,UAAWF,EAAQL,MAAO6L,KAAK,QAAtC,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGZ,EAAQpI,KAAI,SAACiJ,GAAD,OACX,cAACC,EAAA,EAAD,UAA4BD,EAAOZ,OAAnBY,EAAOhL,WAI7B,cAACkL,EAAA,EAAD,UACGnI,EAAKoI,MAAMpB,EAAOE,EAAaF,EAAOE,EAAcA,GAAalI,KAAI,SAACqJ,GACrE,OACE,cAACL,EAAA,EAAD,CAAUM,OAAK,EAACC,KAAK,WAAWC,UAAW,EAA3C,SACGpB,EAAQpI,KAAI,SAACiJ,GACZ,IAAMpI,EAAQwI,EAAIJ,EAAOhL,IACzB,OACE,cAACiL,EAAA,EAAD,UACGrI,GADaoI,EAAOhL,QAJsBoL,EAAII,gBAejE,cAACC,EAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,UAAU,MACVC,MAAO7I,EAAKc,OACZoG,YAAaA,EACbF,KAAMA,EACN8B,aA7De,SAACC,EAAOC,GAC/B/B,EAAQ+B,IA6DAC,oBA1DsB,SAACF,GAC/B5B,GAAgB4B,EAAMtF,OAAO5D,OAC7BoH,EAAQ,e,qECFGiC,GA9GO,SAACrG,GACrB,IAAQkC,EAAsBlC,EAAtBkC,OAAQC,EAAcnC,EAAdmC,UACV1I,EAAU1C,IACVE,EAAQqP,cAERC,EAAqB,CACzBC,MAAOvP,EAAMwP,YAAYC,SAASC,eAClCC,KAAM3P,EAAMwP,YAAYC,SAASG,eAGnC,EAAoDxL,oBAAS,GAA7D,mBAAOyL,EAAP,KAA2BC,EAA3B,KACMC,EAA2BvL,uBAAY,WAC3CsL,GAAsB,SAACxN,GAAD,OAAWA,OAChC,IAEHyH,qBAAU,WAAO,IAAD,KACR,UAACiG,iBAAD,iBAAC,EAAWC,oBAAZ,aAAC,EAAyBC,kBAC9BJ,GAAsB,KAEvB,IAEH/F,qBAAU,WACR,GAAIkB,EACF,OAAO,WACLA,EAAOkF,YAAYvK,SAAQ,SAACkH,GAAD,OAAWA,EAAMG,aAG/C,CAAChC,IAEJ,IAAMmF,EAAkB5L,sBAAW,uCAKjC,WAAOiF,GAAP,eAAAtE,EAAA,+EAE8B6K,UAAUC,aAAaC,gBAAgB,CAAEG,OAAO,IAF9E,OAEUC,EAFV,OAGIpF,EAAUoF,GAHd,gDAKIhL,QAAQ0G,MAAM,gBALlB,yDALiC,sDAajC,CAACd,IAGGqF,EAAoB/L,sBAAW,uCAKnC,WAAOiF,GAAP,SAAAtE,EAAA,sDACE,IACE+F,EAAU,MACV,MAAOc,GACP1G,QAAQ0G,MAAM,UAAYA,GAJ9B,2CALmC,sDAYnC,CAACd,IAGGsF,EAAO7L,mBACX,iBAAM,CACJ,CACE8L,MAAO,UACP/N,UAAWF,EAAQV,IACnB4O,KAAM,cAAC,KAAD,CAAUhO,UAAWF,EAAQN,eACnCqL,MAAO,4BACPoD,QAASP,GAEX,CACEK,MAAO,YACP/N,UAAWF,EAAQV,IACnB4O,KAAM,cAAC,KAAD,CAAwBhO,UAAWF,EAAQN,eACjDqL,MAAO,eACPoD,QAASJ,MAGb,CAAC/N,EAAQV,IAAKU,EAAQN,aAAckO,EAAiBG,IAGvD,OACE,qCACGC,EAAKtL,KAAI,SAACpD,EAAK8O,GAAN,OACR,cAACC,EAAA,EAAD,CAEE3N,GAAc,IAAV0N,GAAe3F,IAAWA,EAC9BjI,QAASsM,EACTwB,MAAO,CACLC,gBAAgB,GAAD,QAAgB,IAAVH,GAAe3F,EAAWA,GAAUqE,EAAmBK,KAAO,EAApE,OAEjBqB,eAAa,EAPf,SAQE,eAACC,GAAA,EAAD,CAAKC,QAAQ,WAAW,aAAYpP,EAAIyL,MAAO7K,UAAWZ,EAAIY,UAAW+N,MAAO3O,EAAI2O,MAAOE,QAAS7O,EAAI6O,QAAxG,UACG7O,EAAI4O,KACJ5O,EAAIyL,UATFzL,EAAI2O,UAgBb,cAAC,EAAD,CAAgBnO,KAAMuN,EAAoBtN,WAAYwN,Q,6DCtF7CoB,GAjBA,WACb,IAAM3O,EAAU1C,IAEhB,OACE,cAACsR,GAAA,EAAD,CAAQ9Q,SAAS,QAAjB,SACE,eAAC+Q,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CAAYC,KAAK,QAAQ7O,UAAWF,EAAQb,WAAY8O,MAAM,UAAU,aAAW,OAAnF,SACE,cAAC,KAAD,MAEF,cAACe,GAAA,EAAD,CAAYN,QAAQ,KAAKxO,UAAWF,EAAQX,MAA5C,uCCJO4P,GANF,CACX3R,WACAuD,QACAyL,UCFgB,CAChB9D,cACAoE,iBACA+B,UACArI,iBCJF,GAGI2I,GAFF3C,UAAa9D,GADf,GACeA,YAAaoE,GAD5B,GAC4BA,cAC1BtP,GACE2R,GADF3R,SAiBa4R,GAdF,WACX,IAAMlP,EAAU1C,KAChB,EAA4BsE,qBAA5B,mBAAO6G,EAAP,KAAeC,EAAf,KAEA,OACE,eAACyG,EAAA,EAAD,CAAWC,SAAS,KAAKlP,UAAWF,EAAQvC,KAA5C,UACE,cAACuN,EAAA,EAAD,CAAMC,WAAS,EAACC,MAAI,EAACC,GAAI,GAAIjM,QAAS,EAAtC,SACE,cAAC,GAAD,CAAauJ,OAAQA,EAAQC,UAAWA,MAE1C,cAAC,GAAD,CAAeD,OAAQA,EAAQC,UAAWA,QCV1ClL,GAAQ6R,cAqCCC,OAnCf,WACE,IAAMC,EAA8BpN,mBAClC,iBAAO,CACLqN,OAAQ,SAACC,QAIX,IAEIC,EAA2BvN,mBAC/B,iBAAO,CACLwN,sBAAuBC,MAAIC,KAC3BC,iBAAkB,KAClBC,oBAAqB,IACrBC,qBAAsB,IACtBC,oBAAqB,OAEvB,IAGF,OACE,mCACE,cAAC,IAAD,CAAgBC,WAAW,kCAA3B,SACE,cAAC,EAAD,CAAmB9O,mBAAoBmO,EAA6B5N,gBAAiB+N,EAArF,SACE,eAACS,EAAA,EAAD,CAAe3S,MAAOA,GAAtB,UACE,cAAC4S,EAAA,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,cC1BGC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBpN,MAAK,YAAkD,IAA/CqN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.f5f0d884.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/styles';\n\nconst useStyle = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    paddingTop: 96,\n    paddingBottom: 84,\n    minHeight: '100vh',\n    position: 'relative',\n  },\n  devStreamer: {\n    width: '100%',\n    backgroundColor: red[100],\n  },\n  devStreamerMedia: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'contain',\n  },\n  cannotUseModal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  cannotUseModalPaper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  fab: {\n    position: 'fixed!important',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  table: {\n    minWidth: 650,\n  },\n}));\n\nexport default useStyle;\n","import React from 'react';\nimport { Modal, Backdrop, Fade } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport useStyle from '../style/useStyle';\n\nconst CannotUseModal = ({ open, handleOpen }) => {\n  const classes = useStyle();\n\n  return (\n    <Modal\n      aria-labelledby=\"cannot-use-modal\"\n      aria-describedby=\"cannot-use-this-site-without-chrome\"\n      className={classes.cannotUseModal}\n      open={open}\n      onClose={handleOpen}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 500,\n      }}>\n      <Fade in={open}>\n        <div className={classes.paper}>\n          <h2 id=\"transition-modal-title\">사용 불가</h2>\n          <p id=\"transition-modal-description\">Chrome에서만 정상 동작합니다.</p>\n        </div>\n      </Fade>\n    </Modal>\n  );\n};\n\nCannotUseModal.defaultProps = {\n  open: false,\n};\n\nCannotUseModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleOpen: PropTypes.func.isRequired,\n};\n\nexport default CannotUseModal;\n","import CannotUseModal from './CannotUseModal';\n\nconst modal = {\n  CannotUseModal,\n};\n\nexport default modal;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { createScheduler, createWorker } from 'tesseract.js';\n\nconst TesseractContext = React.createContext();\n\nconst { Consumer: TesseractConsumer, Provider } = TesseractContext;\n\nexport { TesseractConsumer, TesseractContext };\n\nexport const TesseractProvider = ({\n  workerCreateOption,\n  children,\n  onLoad,\n  useSchedule = true,\n  workerNumber = 3,\n  loadLanguage = 'eng',\n  initialize = 'eng',\n  workerParameter = {},\n}) => {\n  const [loaded, setLoaded] = useState(false);\n\n  const handleOnLoaded = useCallback(\n    ({ workers, scheduler }) => {\n      if (onLoad) {\n        onLoad({ workers, scheduler });\n      }\n      setLoaded(true);\n    },\n    [onLoad]\n  );\n\n  const scheduler = useMemo(() => useSchedule && createScheduler(), [useSchedule]);\n\n  const workers = useMemo(\n    () =>\n      Promise.all(\n        ((arr) => arr.fill())(new Array(workerNumber)).map(async () => {\n          const worker = createWorker(workerCreateOption);\n          console.log(new Date(), 'load worker');\n          await worker.load();\n          await worker.loadLanguage(loadLanguage);\n          await worker.initialize(initialize);\n          await worker.setParameters(workerParameter);\n\n          return worker;\n        })\n      ).then((workers) => {\n        if (useSchedule) {\n          workers.forEach((worker) => {\n            scheduler.addWorker(worker);\n          });\n        }\n        handleOnLoaded({ workers, scheduler });\n      }),\n    [workerCreateOption, workerNumber, loadLanguage, initialize, workerParameter, useSchedule, scheduler, handleOnLoaded]\n  );\n\n  const providerValue = useMemo(\n    () => ({\n      scheduler,\n      workers,\n      loaded,\n    }),\n    [loaded, scheduler, workers]\n  );\n\n  return <Provider value={providerValue}>{children}</Provider>;\n};\n","import { proxy, useSnapshot } from 'valtio';\n\nexport const state = proxy({\n  rows: [],\n});\n\nconst createRow = ({ jobId, data: { text, confidence, blocks, paragraphs, lines } }) => ({\n  jobId,\n  text,\n  confidence,\n  blocks,\n  paragraphs,\n  lines,\n});\nexport const actions = {\n  addLog: (tesseractLog) => {\n    state.rows.push(createRow(tesseractLog));\n  },\n  clearLogs: () => {\n    state.rows.length = 0;\n  },\n};\n\nexport const useTesseractLogger = () => {\n  const snapshot = useSnapshot(state);\n\n  return snapshot.rows;\n};\n","import processFrame from './processFrame';\n\nconst clearCanvas = (canvas) => {\n  canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);\n  canvas.getContext('2d').beginPath();\n  canvas.removeAttribute('width');\n  canvas.removeAttribute('height');\n};\n\nconst util = {\n  clearCanvas,\n  processFrame,\n};\n\nexport default util;\n","import { useOpenCv } from 'opencv-react';\nimport { useMemo } from 'react';\nimport { useTesseract } from './useTesseract';\nimport { actions } from './TesseractLogger';\n\n// const vMatrixVisible = () => {\n//   return true;\n// }\n\nconst useCvProcess = (createProcess) => {\n  const { cv, loaded } = useOpenCv();\n  const { scheduler } = useTesseract();\n  const [preProcess, process, clearProcess] = useMemo(() => createProcess(cv, loaded, scheduler), [cv, loaded, createProcess, scheduler]);\n\n  return { preProcess, process, clearProcess, cv, loaded };\n};\n\n/**\n *\n * @param {import(\"opencv-react\").cv} cv\n * @param {boolean} loaded\n * @param {import(\"tesseract.js\").Scheduler} scheduler\n * @returns\n */\nconst createProcessGrayScaleAndShow = (cv, loaded, scheduler) => {\n  if (loaded) {\n    let dst;\n    // let dst2;\n    // const rect = new cv.Rect(337, 120, 696, 576);\n    window.PROCESS_DST = dst;\n\n    return [\n      () => {\n        dst = new cv.Mat();\n        actions.clearLogs();\n        // dst2 = new cv.Mat();\n      },\n      ({ src, canvas }) => {\n        // dst = src.roi(rect);\n        // cv.cvtColor(dst, dst2, cv.COLOR_RGBA2GRAY);\n        cv.cvtColor(src, dst, cv.COLOR_RGBA2GRAY);\n        cv.imshow(canvas, dst);\n\n        if (scheduler.getQueueLen() < 5) {\n          console.debug(new Date(), 'add job');\n          (async () => {\n            actions.addLog(await scheduler.addJob('recognize', canvas));\n            // console.log(log);\n          })();\n        }\n      },\n      () => {\n        dst.delete();\n        // dst2.delete();\n        dst = null;\n        // dst2 = null;\n      },\n    ];\n  } else {\n    return [() => {}, () => {}];\n  }\n};\n\nconst processFrame = {\n  useCvProcess,\n  createProcessGrayScaleAndShow,\n};\n\nexport default processFrame;\n","import React from 'react';\nimport { TesseractContext } from './TerreractProvider';\n\nexport const useTesseract = () => React.useContext(TesseractContext);\n","import { Tooltip } from '@material-ui/core';\nimport { useEffect, useState, useRef, useCallback, useMemo } from 'react';\nimport { proxy, useSnapshot } from 'valtio';\nimport PropTypes from 'prop-types';\n\nconst MouseTracker = (props) => {\n  const { children } = props;\n  const ref = useRef();\n  const [point, setPoint] = useState({ x: null, y: null });\n\n  const state = useMemo(\n    () =>\n      proxy({\n        x: null,\n        y: null,\n      }),\n    []\n  );\n  const snap = useSnapshot(state);\n\n  const handleMouseOver = useCallback(\n    /**\n     * @returns {import('react').MouseEventHandler}\n     * @param {MouseEvent} e\n     */\n    (e) => {\n      if (!e.ctrlKey) {\n        if (e.target instanceof HTMLVideoElement && e.layerX >= 0 && e.layerY >= 0) {\n          state.x = e.layerX;\n          state.y = e.layerY;\n        } else {\n          state.x = null;\n          state.y = null;\n        }\n      }\n    },\n    [state]\n  );\n\n  useEffect(() => {\n    const el = ref.current;\n    el.addEventListener('mousemove', handleMouseOver);\n    return () => {\n      el.removeEventListener('mousemove', handleMouseOver);\n    };\n  }, [handleMouseOver]);\n\n  const handleMouseClick = useCallback(\n    /**\n     * @returns {import('react').MouseEventHandler}\n     * @param {MouseEvent} e\n     */\n    (e) => {\n      const x = e.ctrlKey ? snap.x : e.layerX;\n      const y = e.ctrlKey ? snap.y : e.layerY;\n\n      console.log({ x, y });\n      if (e.target instanceof HTMLVideoElement && x >= 0 && y >= 0) {\n        if (point.x !== null && point.y !== null) {\n          console.log({\n            x1: point.x,\n            y1: point.y,\n            x2: x,\n            y2: y,\n            point1: point,\n            point2: { x, y },\n            width: Math.abs(point.x - x),\n            height: Math.abs(point.y - y),\n          });\n          setPoint({ x: null, y: null });\n        } else {\n          setPoint({ x, y });\n        }\n      }\n    },\n    [snap, point]\n  );\n  useEffect(() => {\n    const el = ref.current;\n    el.addEventListener('click', handleMouseClick);\n    return () => {\n      el.removeEventListener('click', handleMouseClick);\n    };\n  }, [handleMouseClick]);\n\n  const getTitle = useCallback(() => {\n    if (snap.x !== null && snap.y !== null) {\n      return `x:${snap.x}, y:${snap.y}`;\n    } else {\n      return '';\n    }\n  }, [snap]);\n\n  return (\n    <Tooltip followCursor={true} title={getTitle()} ref={ref}>\n      {children}\n    </Tooltip>\n  );\n};\n\nMouseTracker.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default MouseTracker;\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { Box, Grid, Paper, TableContainer, Table, TableHead, TableCell, TableBody, TablePagination } from '@material-ui/core';\nimport useStyle from '../style/useStyle';\nimport PropTypes from 'prop-types';\nimport util from '../../util';\nimport MouseTracker from './MouseTracker';\nimport { TableRow } from '@material-ui/core';\nimport { useTesseractLogger } from '../../util/TesseractLogger';\n\nconst {\n  clearCanvas,\n  processFrame: { useCvProcess, createProcessGrayScaleAndShow },\n} = util;\n\nconst DevStreamer = (props) => {\n  const { stream, setStream } = props;\n  const classes = useStyle();\n  const rows = useTesseractLogger();\n\n  const { preProcess, process: processGrayScaleAndShow, clearProcess, cv } = useCvProcess(createProcessGrayScaleAndShow);\n\n  const videoRef = useRef(HTMLVideoElement.prototype);\n  const canvasRef = useRef(HTMLCanvasElement.prototype);\n  const srcRef = useRef(null);\n  const captureRef = useRef();\n\n  const clearEnv = useCallback(() => {\n    if (srcRef.current) {\n      srcRef.current.delete();\n      srcRef.current = null;\n    }\n    if (timerRef.current) {\n      cancelAnimationFrame(timerRef.current);\n      timerRef.current = null;\n    }\n    clearCanvas(canvasRef.current);\n    clearProcess();\n  }, [clearProcess]);\n\n  const timerRef = useRef();\n  const frameRateRef = useRef(30);\n\n  const processFrame = useCallback(() => {\n    try {\n      captureRef.current.read(srcRef.current);\n\n      processGrayScaleAndShow({\n        src: srcRef.current,\n        canvas: canvasRef.current,\n      });\n\n      timerRef.current = requestAnimationFrame(processFrame);\n    } catch (error) {\n      console.error(error);\n    }\n  }, [processGrayScaleAndShow]);\n\n  const start = useCallback(() => {\n    console.debug(new Date(), 'start');\n\n    const { srcObject: stream, videoHeight: height, videoWidth: width } = videoRef.current;\n    const { frameRate } = stream.getVideoTracks()[0].getSettings();\n    frameRateRef.current = frameRate;\n    srcRef.current = new cv.Mat(height, width, cv.CV_8UC4);\n    captureRef.current = new cv.VideoCapture(videoRef.current);\n\n    preProcess();\n\n    timerRef.current = requestAnimationFrame(processFrame);\n  }, [preProcess, processFrame, cv]);\n\n  useEffect(() => {\n    if (stream && stream instanceof MediaStream && stream.active) {\n      const videoEl = videoRef.current;\n      videoEl.srcObject = stream.clone();\n\n      const track = stream.getVideoTracks()[0];\n\n      const handleTrackEnded = () => {\n        console.debug(new Date(), 'track ended by user');\n        setStream(null);\n      };\n      track.addEventListener('ended', handleTrackEnded);\n\n      (async () => {\n        await videoEl.play();\n        const { videoHeight: height, videoWidth: width } = videoRef.current;\n        videoRef.current.width = width;\n        videoRef.current.height = height;\n        console.log('hi', height, width, videoRef.current.videoHeight, videoRef.current.videoWidth);\n        start();\n      })();\n\n      return () => {\n        console.debug(new Date(), 'remove stream');\n        track.removeEventListener('ended', handleTrackEnded);\n        videoEl.srcObject.getVideoTracks().forEach((track) => track.stop());\n        videoEl.srcObject = null;\n        videoEl.removeAttribute('width');\n        videoEl.removeAttribute('height');\n        clearEnv();\n      };\n    }\n  }, [stream, setStream, start, clearEnv]);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const columns = useMemo(\n    () => [\n      { id: 'jobId', label: 'job ID' },\n      { id: 'text', label: 'text' },\n    ],\n    []\n  );\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <>\n      {\n        // process.env.NODE_ENV === 'deveolpment' &&\n        <MouseTracker>\n          <Grid container justifyContent={'center'} item xs={6}>\n            <Box className={classes.devStreamer} clone>\n              <video className={classes.devStreamerMedia} ref={videoRef}></video>\n            </Box>\n          </Grid>\n        </MouseTracker>\n      }\n      <Grid container justifyContent={'center'} item xs={6}>\n        <Box className={classes.devStreamer} clone>\n          <canvas className={classes.devStreamerMedia} ref={canvasRef}></canvas>\n        </Box>\n      </Grid>\n      <Grid item xs={12}>\n        <Paper>\n          <TableContainer>\n            <Table className={classes.table} size=\"small\">\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell key={column.id}>{column.label}</TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  return (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                      {columns.map((column) => {\n                        const value = row[column.id];\n                        return (\n                          <TableCell key={column.id}>\n                            {value /* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                          </TableCell>\n                        );\n                      })}\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={rows.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Paper>\n      </Grid>\n    </>\n  );\n};\n\nDevStreamer.propTypes = {\n  stream: PropTypes.instanceOf(MediaStream),\n};\n\nexport default DevStreamer;\n","import { Fab, Zoom, useTheme } from '@material-ui/core';\nimport CastIcon from '@material-ui/icons/Cast';\nimport CancelPresentationIcon from '@material-ui/icons/CancelPresentation';\nimport React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport CannotUseModal from '../modal/CannotUseModal';\nimport PropTypes from 'prop-types';\nimport useStyle from '../style/useStyle';\n\nconst MediaSelector = (props) => {\n  const { stream, setStream } = props;\n  const classes = useStyle();\n  const theme = useTheme();\n\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\n  const [cannotUseModalOpen, setCannotUseModalOpen] = useState(false);\n  const handleCannotUseModalOpen = useCallback(() => {\n    setCannotUseModalOpen((open) => !open);\n  }, []);\n\n  useEffect(() => {\n    if (!!!navigator?.mediaDevices?.getDisplayMedia) {\n      setCannotUseModalOpen(true);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (stream) {\n      return () => {\n        stream.getTracks().forEach((track) => track.stop());\n      };\n    }\n  }, [stream]);\n\n  const handleCastClick = useCallback(\n    /**\n     * @param {import('react').MouseEvent} e\n     * @returns {Promise<import('react').MouseEventHandler>}\n     */\n    async (e) => {\n      try {\n        const mediaStream = await navigator.mediaDevices.getDisplayMedia({ audio: false });\n        setStream(mediaStream);\n      } catch (error) {\n        console.error('Error: ' + error);\n      }\n    },\n    [setStream]\n  );\n\n  const handleCancelClick = useCallback(\n    /**\n     * @param {import('react').MouseEvent} e\n     * @returns {Promise<import('react').MouseEventHandler>}\n     */\n    async (e) => {\n      try {\n        setStream(null);\n      } catch (error) {\n        console.error('Error: ' + error);\n      }\n    },\n    [setStream]\n  );\n\n  const fabs = useMemo(\n    () => [\n      {\n        color: 'primary',\n        className: classes.fab,\n        icon: <CastIcon className={classes.extendedIcon} />,\n        label: '화면 선택',\n        onClick: handleCastClick,\n      },\n      {\n        color: 'secondary',\n        className: classes.fab,\n        icon: <CancelPresentationIcon className={classes.extendedIcon} />,\n        label: '종료',\n        onClick: handleCancelClick,\n      },\n    ],\n    [classes.fab, classes.extendedIcon, handleCastClick, handleCancelClick]\n  );\n\n  return (\n    <>\n      {fabs.map((fab, index) => (\n        <Zoom\n          key={fab.color}\n          in={index === 0 ? !stream : !!stream}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${(index === 0 ? !stream : !!stream) ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit>\n          <Fab variant=\"extended\" aria-label={fab.label} className={fab.className} color={fab.color} onClick={fab.onClick}>\n            {fab.icon}\n            {fab.label}\n          </Fab>\n        </Zoom>\n      ))}\n      {/* <Button variant=\"contained\" color={ stream ? \"secondary\" : \"primary\" } disableElevation onClick={handleClick}>\n        { stream ? \"종료\" : \"화면 선택\" }\n      </Button> */}\n      <CannotUseModal open={cannotUseModalOpen} handleOpen={handleCannotUseModalOpen} />\n    </>\n  );\n};\n\nMediaSelector.propTypes = {\n  stream: PropTypes.instanceOf(MediaStream),\n  setStream: PropTypes.func.isRequired,\n};\n\nexport default MediaSelector;\n","import React from 'react';\nimport { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport useStyle from '../style/useStyle';\n\nconst TopBar = () => {\n  const classes = useStyle();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar>\n        <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n          <MenuIcon />\n        </IconButton>\n        <Typography variant=\"h6\" className={classes.title}>\n          Tesseact React Test\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default TopBar;\n","import useStyle from './style/useStyle';\nimport modal from './modal';\nimport component from './component';\n\nconst atom = {\n  useStyle,\n  modal,\n  component,\n};\n\nexport default atom;\n","import DevStreamer from './DevStreamer';\nimport MediaSelector from './MediaSelector';\nimport TopBar from './TopBar';\nimport MouseTracker from './MouseTracker';\n\nconst component = {\n  DevStreamer,\n  MediaSelector,\n  TopBar,\n  MouseTracker,\n};\n\nexport default component;\n","import React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport atom from '../atom';\n\nconst {\n  component: { DevStreamer, MediaSelector },\n  useStyle,\n} = atom;\n\nconst Main = () => {\n  const classes = useStyle();\n  const [stream, setStream] = useState();\n\n  return (\n    <Container maxWidth=\"xl\" className={classes.root}>\n      <Grid container item xs={12} spacing={1}>\n        <DevStreamer stream={stream} setStream={setStream} />\n      </Grid>\n      <MediaSelector stream={stream} setStream={setStream} />\n    </Container>\n  );\n};\n\nexport default Main;\n","import React, { useMemo } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { OpenCvProvider } from 'opencv-react';\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport Main from './page/Main';\nimport TopBar from './atom/component/TopBar';\nimport { TesseractProvider } from './util/TerreractProvider';\nimport { PSM } from 'tesseract.js';\n\nconst theme = createTheme();\n\nfunction App() {\n  const tesseractWorkerCreateOption = useMemo(\n    () => ({\n      logger: (m) => {\n        // console.log(m)\n      },\n    }),\n    []\n  );\n  const tesseractWorkerParameter = useMemo(\n    () => ({\n      tessedit_pageseg_mode: PSM.AUTO,\n      user_defined_dpi: '70',\n      tessedit_create_box: '1',\n      tessedit_create_unlv: '1',\n      tessedit_create_osd: '1',\n    }),\n    []\n  );\n\n  return (\n    <>\n      <OpenCvProvider openCvPath=\"/webrtc-tesseract/lib/opencv.js\">\n        <TesseractProvider workerCreateOption={tesseractWorkerCreateOption} workerParameter={tesseractWorkerParameter}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <TopBar />\n            <Main />\n          </ThemeProvider>\n        </TesseractProvider>\n      </OpenCvProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}